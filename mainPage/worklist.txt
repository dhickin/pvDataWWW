
STATUS AND ACTIVITIES
Last update 9-Nov-2013, Greg White.
Previous update 13-Oct-2013. 



ACTIVITIES AND THEIR JOBS
=========================
Working list of present and near future activities of EPICS V4

* Efficient handling of big data
  + Modification of the funcionality of type conversion (MD, DH). This is
    largely split into actions for copying without type conversion (see above),
    copying/extraction with type conversion. [3]
  + Modifications to IOC for data pipelining (MD, AJ)
    27/2/13: No concrete design yet. Plan to develop from pvaSrv and test image
    server experiences.
  + Creating a prototype of “batched field access” (BFA) API for high performance
    control of record locksets [27-2-13]. Plan to use in pvaSrv. MD, RL.  

* APIs and Clients
  + Start "EV4 UI Use Cases and APIs" doc, to list user interface use cases
    - Find Editor
  + pvRequest
      Define requirements and syntax
      Development of support and integration
  + Decide Future of EasyPVA - Marty and Matej were going to discuss this. Discuss on 29th?
  + Python pvAccess implementation
  + Normative Types 
    - re-write for building up from atomic, to array to structure types
    - add units and error much more directly
    - Get working draft of areaDetector types
    - N-types Introspection and Data interface helper API (Many in WG seeme to want it, 
      not conviced myself, esp if the job "Structure construction helper API" (below) is done.
  + Review of requirements for the API of monitors.
    MK. Doc started to review present API [27-2-13][2], but primary audience (RL) wants
    more detail. RL reviewing and we will take it up again in meeting soon. Required
    for pvaSrv.
  + Complete pvManager and eget integration with Ntypes MS
    [20-Feb-13 eget can now disp NTImages! ]
    DH to get for MS what he needs to encode a BGR image (fourcc code and the image
    depth & color mode)
  + Need to verify easy asynchronous callback support in Matlab - a key shortcoming of lca.
  + [PVData] Structure construction helper API (in progress 9-Nov-13).
 
* Data Processing Support
  + Decide in definition of the standard image types; implement in Normative Types doc.
    DH, NM
   Ensure that in the short term, eget can decode and display
   images produced by the test image server of areaDetctor sourced images. Decide
   whether, in the longer term, we intend to standardize a one structure definition
   for images ("NTImage"), more than one (that is, one specifically for
   areaDetector, and another more generic one), or even, one wrapper
   of an arbitrary number of encodings (like TIFF vs JPEG).

* Multicast
  - Once done, use it for a logging architecture (ie replace cmlog etc, except GUI part).

* Windows Port

* vxWorks Port, Jenkins, and establishing which versions (<6, or 6.x, or >= 6.6 [for gcc
  4.1.2] only) we will support. 
  DZ,MS,AJ. 
  27/2/13: vxWorks port succeeds if micro-benchmarking is not included. MS
  working with DZ to fix.

* pvaSrv (the pvaccess server for an "EPICS V3 IOC") hence the primary V3-V4 interop mechanism. 
  + 1 V4 channel : 1 IOC PV (called dbPv) ( recently completed right)?
  + 1 V4 channel : N IOC PV (called dbGroup) ie support for groups.
  + Decision on how to management compatibility of V4 releases with core releases (most, 
    importantly will 4.4.0 require 3.15)
     (RES and AIs in http://epicsv4.titanpad.com/ep/pad/view/41/latest)

* Development Environment and Infrastructure
  + hg flow deployment and adoption
  + Version numbering extension (to 4) to disambiguate ABI from protocol
  + Automatic release package building in Jenkins
  + Update release procedure document to include checklist approcah, not just diagram. Inc C++. 
  + License agreement. Add proper headers referring to license.

* IOC
  + Correct the naming of modules w.r.t "PV" and "channel". My understanding (such taht it is) is that
    in V3 many things are named "channel" but they're actually about PVs, and the opposite is also
    true. RL

* Web Site and Global Documentation
  + Update website for 4.3.0 (remove old references and broken links from Development page)
  + Complete FY 2014 charter
  + Track progress on jobs and activities by Agile Dashboard (put on WG page), 
  + Assembling formal list of architectures and compilers tried and tested with EPICS V4 
    MS, AJ, GW. 
    [27-2-13] 20/2/13 First pass table for SL and vxWorks completed.  
  + Javadoc and Doxygen incomplete. Needs much better completeness. Needs to conform to
    much stricter code documentation standards w.r.t. careful use of tense and
    specificity (MK, MS, GW, DH to do Doxygen for CPP modules?)

* Performance measurement benchmarking testbench creation; benchmarking EPICS V4
  beta 2.
  MS
  Status: Presented at PSI meeting, but output wasn't right (RMS where meant mean)
  and only indicated mean times, not further structure like how long 1st roundtrip took. 

KEY DEPLOYMENTS
===============
  + Image Processing pipeline, Diamond, DH
  + AIDA 2 services, SLAC (model, relational database, archive, names). GW

   
OTHER ODDS AND ENDS
===================

 * Adding a "reflection" API to pvAccess; that is, an API for giving data about PVs.
  Simple example: what is the list of PVs hosted by a pvaccess
  server. More particularly, should be able to ask for info about a PV:
  > eget quad03 -info
  quad03
  structure 
    double bdesired  0.21123 KG-m^2    : Field (B) desired  
    double bactual   0.22121 KG-m^2    : Energization B field of last readback 
    double Edesired  2.12 GeV          : The beam energy at which this quad correctly focuses
    ...

* Definition of an interface for requesting help from server side on a PV.
  This may be put together with work on pvRequest, and may be together with
  reflection API work.

* We have the ChannelFinder and a pvaccess RPC based interface, but no real nominal
  architecture for its use. I guess that should wait until we have a WG complimentary
  to the V4 WG, but for doing apps.

* gather - finished?  What is the state of the
  gather example? No bpm service. (MK)

* v3-v4 interop user guide. Not started. We have just a kinda description from Marty
  about the difference between processing in the two of them. Nothing concrete you
  can give an engineer that says "this is a guide to the interoperation of EPICS V3
  and V4". Having trouble convincing WG of the necessity.
 
* Code comments in pv core modules (MK, MS)

* Remove ALL warnings from all compiles of pv core code, java and c++. We have 100s
    (MK, MS)

* Documentation. 
    
    pvData and pvIOC documents need significant editing to improve readability. Eg,
    define and provide references for "top level structure", "introspection
    interface", "channel", "record" etc. Must much better distinguish references to
    V3 items and disambiguate such terms, e.g. use of the term "channel access"
    sometimes to refer to the generic control protocol, and sometimes to refer to
    "Jeff Hill's" Channel Access. Make use of uppercase, quotes, italics
    consistently. (MK).
 


PERIPHERY ACTIVITIES 
====================
The following are known activities we're tracking but are not in the scope of EPICS
V4.


*  caQtDM. caQtDM is a "synoptic display manager" being used for generating the
   controls UI "screens" for PSI SLS and SwissFEL. Anton Mezger, [1]

*  pyQt apps   - Lingyun Yang, GS

*  PVManager connection to PVAccess. Matej is implementing the vtype "type
   adapter" that will enable one to connect EPICS V4 Normative Types to pvManager
   displays.

*  OLog connection? – Kunal Shroff.  

*  "ArchiveAppliance" expand for V4 types. Work demoed by Murali. 


OUT OF SCOPE BUT WE'D LOVE IF SOMEONE DID
=========================================
1. Write a pva scheme plugin for a web browser, so one could do pva scheme
   acquisitions directly from a web browser. egs pva:///quad45:bdes,
   pva:///testNTMatrix?columns=3&rows=5.

2. HDF5 serialization of pvData Structures, so one could write EPICS V4 data directly
   to an HDF5 filesystem without intermediate layers. Maybe NM is doing this?


QUESTIONS
=========
* Has ChannelRPC been be made "asynchronous", or "multithreaded"? 

MANAGEMENT PRINCIPLES
======================

Be all on the same page about the role of the Charter. Bob and I agreed that
we will still use a charter but that we can make changes every 3 months or so. 
How will we make changes to tracking activities. Roughly I want to use the task board
idea [4] from scrum (but without actually doing fixed period scrums). So, we would
keep a table of the tasks presently being undertaken for each activity. We can discuss
whether to use such a task board, and how formal to be about them (just notes in a 
table, or actually start a new SF ticket type called "Tasks". 


References
==========
[1] caQtDM, http://epics.web.psi.ch/software/caqtdm/
[2] pvRequest, http://epics-pvdata.sourceforge.net/informative/pvRequest.html
[3] type conversion catalog, http://tinyurl.com/c92xu4u
[4] http://www.mountaingoatsoftware.com/agile/scrum/task-boards

Meeting Refs
============
[27-2-13] https://docs.google.com/document/d/1TVlj59sHAoWRcqRFzdqYiitqMC-OvaSys6NvLxKVoMc/pub
